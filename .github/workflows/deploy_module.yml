name: Deploy RPLiDAR Module to Registry

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_dispatch:
  push:
  release:
    types: [released]

env:
  VERSION: ${{ github.ref_name }}

jobs:
  deploy_module:
    name: AppImage Build RPLiDAR
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: [x64, linux, self-hosted]
            image: ghcr.io/viamrobotics/canon:amd64-cache
            platform: linux/amd64
          - arch: [arm64, linux, self-hosted]
            image: ghcr.io/viamrobotics/canon:arm64-cache
            platform: linux/arm64
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform ${{ matrix.platform }}
    timeout-minutes: 15
    outputs:
      date: ${{ steps.build_date.outputs.date }}

    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Clean and fix Permissions
      run: |
        chown testbot:testbot -R .
        sudo -Hu testbot bash -lc 'make clean'

    - name: Build appimage
      run: |
        apt-get -y install swig 
        sudo -Hu testbot bash -lc 'make BUILD_CHANNEL="${{ env.VERSION }}" appimage'

    - name: Bundle module
      run: |
        cp etc/packaging/appimages/deploy/rplidar-module-*.AppImage rplidar-module.AppImage
        tar czf module.tar.gz rplidar-module.AppImage

    - id: stripped-version
      run: echo version=${VERSION#v} >> $GITHUB_OUTPUT

    - uses: viamrobotics/upload-module@main
      if: github.event_name == 'release'
      with:
        module-path: module.tar.gz
        platform: ${{ matrix.platform }}
        version: ${{ steps.stripped-version.outputs.version }}
        key-id: ${{ secrets.viam_key_id }}
        key-value: ${{ secrets.viam_key_value }}
