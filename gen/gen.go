/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: gen.i

package gen

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef long long swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef long long swig_type_16;
extern void _wrap_Swig_free_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_gen_37f4c5c4e69870d1(swig_intgo arg1);
extern swig_voidp _wrap_new_byteArray_gen_37f4c5c4e69870d1(swig_intgo arg1);
extern void _wrap_delete_byteArray_gen_37f4c5c4e69870d1(swig_voidp arg1);
extern char _wrap_byteArray_getitem_gen_37f4c5c4e69870d1(swig_voidp arg1, swig_intgo arg2);
extern void _wrap_byteArray_setitem_gen_37f4c5c4e69870d1(swig_voidp arg1, swig_intgo arg2, char arg3);
extern swig_intgo _wrap_RESULT_INVALID_DATA_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_OPERATION_FAIL_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_OPERATION_TIMEOUT_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_OPERATION_STOP_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_OPERATION_NOT_SUPPORT_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_FORMAT_NOT_SUPPORT_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_INSUFFICIENT_MEMORY_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_OPERATION_ABORTED_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_NOT_FOUND_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RESULT_RECONNECTING_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RPLIDAR_ANS_HEADER_SUBTYPE_SHIFT_gen_37f4c5c4e69870d1(void);
extern void _wrap_rplidar_cmd_packet_t_syncByte_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_cmd_packet_t_syncByte_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_cmd_packet_t_cmd_flag_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_cmd_packet_t_cmd_flag_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_cmd_packet_t_size_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_cmd_packet_t_size_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_cmd_packet_t_data_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_rplidar_cmd_packet_t_data_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_cmd_packet_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_cmd_packet_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_ans_header_t_syncByte1_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_ans_header_t_syncByte1_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_ans_header_t_syncByte2_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_ans_header_t_syncByte2_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_ans_header_t_size_q30_subtype_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_ans_header_t_size_q30_subtype_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_ans_header_t_Xtype_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_ans_header_t_Xtype_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_ans_header_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_ans_header_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPLIDAR_HQ_SCAN_FLAG_CCW_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RPLIDAR_HQ_SCAN_FLAG_RAW_ENCODER_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RPLIDAR_HQ_SCAN_FLAG_RAW_DISTANCE_gen_37f4c5c4e69870d1(void);
extern void _wrap_rplidar_payload_express_scan_t_working_mode_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_payload_express_scan_t_working_mode_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_express_scan_t_working_flags_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_payload_express_scan_t_working_flags_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_express_scan_t_param_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_payload_express_scan_t_param_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_payload_express_scan_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_payload_express_scan_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_hq_scan_t_flag_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_payload_hq_scan_t_flag_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_hq_scan_t_reserved_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_rplidar_payload_hq_scan_t_reserved_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_payload_hq_scan_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_payload_hq_scan_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_get_scan_conf_t_Xtype_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_payload_get_scan_conf_t_Xtype_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_get_scan_conf_t_reserved_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_rplidar_payload_get_scan_conf_t_reserved_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_payload_get_scan_conf_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_payload_get_scan_conf_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_motor_pwm_t_pwm_value_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_payload_motor_pwm_t_pwm_value_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_payload_motor_pwm_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_payload_motor_pwm_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_acc_board_flag_t_reserved_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_payload_acc_board_flag_t_reserved_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_payload_acc_board_flag_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_payload_acc_board_flag_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_payload_hq_spd_ctrl_t_rpm_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_payload_hq_spd_ctrl_t_rpm_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_payload_hq_spd_ctrl_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_payload_hq_spd_ctrl_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPLIDAR_RESP_ACC_BOARD_FLAG_MOTOR_CTRL_SUPPORT_MASK_gen_37f4c5c4e69870d1(void);
extern void _wrap_rplidar_response_acc_board_flag_t_support_flag_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_response_acc_board_flag_t_support_flag_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_acc_board_flag_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_acc_board_flag_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPLIDAR_RESP_MEASUREMENT_SYNCBIT_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RPLIDAR_RESP_HQ_FLAG_SYNCBIT_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RPLIDAR_RESP_MEASUREMENT_CHECKBIT_gen_37f4c5c4e69870d1(void);
extern void _wrap_rplidar_response_sample_rate_t_std_sample_duration_us_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_sample_rate_t_std_sample_duration_us_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_sample_rate_t_express_sample_duration_us_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_sample_rate_t_express_sample_duration_us_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_sample_rate_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_sample_rate_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_measurement_node_t_sync_quality_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_measurement_node_t_sync_quality_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_measurement_node_t_angle_q6_checkbit_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_measurement_node_t_angle_q6_checkbit_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_measurement_node_t_distance_q2_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_measurement_node_t_distance_q2_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_measurement_node_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_measurement_node_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPLIDAR_RESP_MEASUREMENT_EXP_ANGLE_MASK_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_RPLIDAR_RESP_MEASUREMENT_EXP_DISTANCE_MASK_gen_37f4c5c4e69870d1(void);
extern void _wrap_rplidar_response_cabin_nodes_t_distance_angle_1_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_cabin_nodes_t_distance_angle_1_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_cabin_nodes_t_distance_angle_2_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_cabin_nodes_t_distance_angle_2_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_cabin_nodes_t_offset_angles_q3_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_cabin_nodes_t_offset_angles_q3_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_cabin_nodes_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_cabin_nodes_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPLIDAR_RESP_MEASUREMENT_EXP_SYNCBIT_gen_37f4c5c4e69870d1(void);
extern void _wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_1_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_1_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_2_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_2_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_capsule_measurement_nodes_t_start_angle_sync_q6_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_capsule_measurement_nodes_t_start_angle_sync_q6_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_capsule_measurement_nodes_t_cabins_set_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_rplidar_response_capsule_measurement_nodes_t_cabins_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_dense_cabin_nodes_t_distance_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_dense_cabin_nodes_t_distance_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_dense_cabin_nodes_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_dense_cabin_nodes_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_1_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_1_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_2_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_2_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_dense_capsule_measurement_nodes_t_start_angle_sync_q6_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_dense_capsule_measurement_nodes_t_start_angle_sync_q6_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_dense_capsule_measurement_nodes_t_cabins_set_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_rplidar_response_dense_capsule_measurement_nodes_t_cabins_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_dense_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_dense_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_ultra_cabin_nodes_t_combined_x3_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_response_ultra_cabin_nodes_t_combined_x3_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_ultra_cabin_nodes_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_ultra_cabin_nodes_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_1_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_1_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_2_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_2_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_start_angle_sync_q6_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_start_angle_sync_q6_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_ultra_cabins_set_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_rplidar_response_ultra_capsule_measurement_nodes_t_ultra_cabins_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_ultra_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_ultra_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_measurement_node_hq_t_angle_z_q14_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_measurement_node_hq_t_angle_z_q14_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_measurement_node_hq_t_dist_mm_q2_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_response_measurement_node_hq_t_dist_mm_q2_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_measurement_node_hq_t_quality_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_measurement_node_hq_t_quality_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_measurement_node_hq_t_flag_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_measurement_node_hq_t_flag_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_measurement_node_hq_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_measurement_node_hq_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_hq_capsule_measurement_nodes_t_sync_byte_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_hq_capsule_measurement_nodes_t_sync_byte_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_hq_capsule_measurement_nodes_t_time_stamp_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_1 arg2);
extern swig_type_2 _wrap_rplidar_response_hq_capsule_measurement_nodes_t_time_stamp_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_hq_capsule_measurement_nodes_t_node_hq_set_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_rplidar_response_hq_capsule_measurement_nodes_t_node_hq_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_hq_capsule_measurement_nodes_t_crc32_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_response_hq_capsule_measurement_nodes_t_crc32_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_hq_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_hq_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_get_lidar_conf_t_Xtype_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_response_get_lidar_conf_t_Xtype_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_get_lidar_conf_t_payload_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_rplidar_response_get_lidar_conf_t_payload_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_get_lidar_conf_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_get_lidar_conf_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_set_lidar_conf_t_result_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_rplidar_response_set_lidar_conf_t_result_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_set_lidar_conf_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_set_lidar_conf_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_device_info_t_model_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_device_info_t_model_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_device_info_t_firmware_version_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_device_info_t_firmware_version_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_device_info_t_hardware_version_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_device_info_t_hardware_version_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_device_info_t_serialnum_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_rplidar_response_device_info_t_serialnum_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_device_info_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_device_info_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_device_health_t_status_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_rplidar_response_device_health_t_status_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_rplidar_response_device_health_t_error_code_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_rplidar_response_device_health_t_error_code_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_rplidar_response_device_health_t_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_rplidar_response_device_health_t_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_RplidarScanMode_id_set_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern short _wrap_RplidarScanMode_id_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_RplidarScanMode_us_per_sample_set_gen_37f4c5c4e69870d1(uintptr_t arg1, float arg2);
extern float _wrap_RplidarScanMode_us_per_sample_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_RplidarScanMode_max_distance_set_gen_37f4c5c4e69870d1(uintptr_t arg1, float arg2);
extern float _wrap_RplidarScanMode_max_distance_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_RplidarScanMode_ans_type_set_gen_37f4c5c4e69870d1(uintptr_t arg1, char arg2);
extern char _wrap_RplidarScanMode_ans_type_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_RplidarScanMode_scan_mode_set_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_3 arg2);
extern swig_type_4 _wrap_RplidarScanMode_scan_mode_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_RplidarScanMode_gen_37f4c5c4e69870d1(void);
extern void _wrap_delete_RplidarScanMode_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_DRIVER_TYPE_SERIALPORT_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_DRIVER_TYPE_TCP_gen_37f4c5c4e69870d1(void);
extern _Bool _wrap_ChannelDevice_bind_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_5 arg2, swig_intgo arg3);
extern _Bool _wrap_ChannelDevice_open_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_ChannelDevice_close_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_ChannelDevice_flush_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern _Bool _wrap_ChannelDevice_waitfordata__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_6 arg2, swig_intgo arg3, swig_voidp arg4);
extern _Bool _wrap_ChannelDevice_waitfordata__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_7 arg2, swig_intgo arg3);
extern _Bool _wrap_ChannelDevice_waitfordata__SWIG_2_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_8 arg2);
extern swig_intgo _wrap_ChannelDevice_senddata_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2, swig_type_9 arg3);
extern swig_intgo _wrap_ChannelDevice_recvdata_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2, swig_type_10 arg3);
extern void _wrap_ChannelDevice_setDTR_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_ChannelDevice_clearDTR_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_ChannelDevice_ReleaseRxTx_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_delete_ChannelDevice_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_DEFAULT_TIMEOUT_RPlidarDriver_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_MAX_SCAN_NODES_RPlidarDriver_gen_37f4c5c4e69870d1(void);
extern swig_intgo _wrap_LEGACY_SAMPLE_DURATION_RPlidarDriver_gen_37f4c5c4e69870d1(void);
extern uintptr_t _wrap_RPlidarDriver_CreateDriver__SWIG_0_gen_37f4c5c4e69870d1(swig_intgo arg1);
extern uintptr_t _wrap_RPlidarDriver_CreateDriver__SWIG_1_gen_37f4c5c4e69870d1(void);
extern void _wrap_RPlidarDriver_DisposeDriver_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPlidarDriver_connect__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_11 arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_RPlidarDriver_connect__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_type_12 arg2, swig_intgo arg3);
extern void _wrap_RPlidarDriver_disconnect_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern _Bool _wrap_RPlidarDriver_isConnected_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPlidarDriver_reset__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RPlidarDriver_reset__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPlidarDriver_clearNetSerialRxCache_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPlidarDriver_getAllSupportedScanModes__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_getAllSupportedScanModes__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RPlidarDriver_getTypicalScanMode__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_getTypicalScanMode__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_RPlidarDriver_startScan__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, _Bool arg3, swig_intgo arg4, uintptr_t arg5);
extern swig_intgo _wrap_RPlidarDriver_startScan__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, _Bool arg3, swig_intgo arg4);
extern swig_intgo _wrap_RPlidarDriver_startScan__SWIG_2_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, _Bool arg3);
extern swig_intgo _wrap_RPlidarDriver_startScanExpress__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, short arg3, swig_intgo arg4, uintptr_t arg5, swig_intgo arg6);
extern swig_intgo _wrap_RPlidarDriver_startScanExpress__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, short arg3, swig_intgo arg4, uintptr_t arg5);
extern swig_intgo _wrap_RPlidarDriver_startScanExpress__SWIG_2_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, short arg3, swig_intgo arg4);
extern swig_intgo _wrap_RPlidarDriver_startScanExpress__SWIG_3_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, short arg3);
extern swig_intgo _wrap_RPlidarDriver_getHealth__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_getHealth__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RPlidarDriver_getDeviceInfo__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_getDeviceInfo__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RPlidarDriver_getSampleDuration_uS__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_getSampleDuration_uS__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_RPlidarDriver_setMotorPWM_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern swig_intgo _wrap_RPlidarDriver_setLidarSpinSpeed__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_setLidarSpinSpeed__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, short arg2);
extern swig_intgo _wrap_RPlidarDriver_startMotor_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPlidarDriver_stopMotor_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPlidarDriver_checkMotorCtrlSupport__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_checkMotorCtrlSupport__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_RPlidarDriver_checkIfTofLidar__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_checkIfTofLidar__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_RPlidarDriver_getFrequency__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, swig_type_13 arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_RPlidarDriver_getFrequency__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_type_14 arg3, swig_voidp arg4);
extern swig_intgo _wrap_RPlidarDriver_startScanNormal__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_startScanNormal__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, _Bool arg2);
extern swig_intgo _wrap_RPlidarDriver_checkExpressScanSupported__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern swig_intgo _wrap_RPlidarDriver_checkExpressScanSupported__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_RPlidarDriver_stop__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RPlidarDriver_stop__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern swig_intgo _wrap_RPlidarDriver_grabScanData__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4);
extern swig_intgo _wrap_RPlidarDriver_grabScanData__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern swig_intgo _wrap_RPlidarDriver_grabScanDataHq__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4);
extern swig_intgo _wrap_RPlidarDriver_grabScanDataHq__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern swig_intgo _wrap_RPlidarDriver_ascendScanData__SWIG_0_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_type_15 arg3);
extern swig_intgo _wrap_RPlidarDriver_ascendScanData__SWIG_1_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_type_16 arg3);
extern swig_intgo _wrap_RPlidarDriver_getScanDataWithInterval_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern swig_intgo _wrap_RPlidarDriver_getScanDataWithIntervalHq_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern void _wrap_delete_RPlidarDriver_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern void _wrap_RPlidarDriver__chanDev_set_gen_37f4c5c4e69870d1(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RPlidarDriver__chanDev_get_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_new_measurementNodeHqArray_gen_37f4c5c4e69870d1(swig_intgo arg1);
extern void _wrap_delete_measurementNodeHqArray_gen_37f4c5c4e69870d1(uintptr_t arg1);
extern uintptr_t _wrap_measurementNodeHqArray_getitem_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_measurementNodeHqArray_setitem_gen_37f4c5c4e69870d1(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_gen_37f4c5c4e69870d1(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func New_byteArray(arg1 int) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_new_byteArray_gen_37f4c5c4e69870d1(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func Delete_byteArray(arg1 *byte) {
	_swig_i_0 := arg1
	C._wrap_delete_byteArray_gen_37f4c5c4e69870d1(C.swig_voidp(_swig_i_0))
}

func ByteArray_getitem(arg1 *byte, arg2 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_byteArray_getitem_gen_37f4c5c4e69870d1(C.swig_voidp(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func ByteArray_setitem(arg1 *byte, arg2 int, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_byteArray_setitem_gen_37f4c5c4e69870d1(C.swig_voidp(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

const RPLIDAR_SDK_VERSION string = "1.12.0"
const RESULT_OK int = 0
const RESULT_FAIL_BIT uint64 = 0x80000000
const RESULT_ALREADY_DONE int = 0x20
const RESULT_REMAINING_DATA int = 0x21
func _swig_getRESULT_INVALID_DATA() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_INVALID_DATA_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_INVALID_DATA int = _swig_getRESULT_INVALID_DATA()
func _swig_getRESULT_OPERATION_FAIL() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_OPERATION_FAIL_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_OPERATION_FAIL int = _swig_getRESULT_OPERATION_FAIL()
func _swig_getRESULT_OPERATION_TIMEOUT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_OPERATION_TIMEOUT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_OPERATION_TIMEOUT int = _swig_getRESULT_OPERATION_TIMEOUT()
func _swig_getRESULT_OPERATION_STOP() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_OPERATION_STOP_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_OPERATION_STOP int = _swig_getRESULT_OPERATION_STOP()
func _swig_getRESULT_OPERATION_NOT_SUPPORT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_OPERATION_NOT_SUPPORT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_OPERATION_NOT_SUPPORT int = _swig_getRESULT_OPERATION_NOT_SUPPORT()
func _swig_getRESULT_FORMAT_NOT_SUPPORT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_FORMAT_NOT_SUPPORT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_FORMAT_NOT_SUPPORT int = _swig_getRESULT_FORMAT_NOT_SUPPORT()
func _swig_getRESULT_INSUFFICIENT_MEMORY() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_INSUFFICIENT_MEMORY_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_INSUFFICIENT_MEMORY int = _swig_getRESULT_INSUFFICIENT_MEMORY()
func _swig_getRESULT_OPERATION_ABORTED() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_OPERATION_ABORTED_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_OPERATION_ABORTED int = _swig_getRESULT_OPERATION_ABORTED()
func _swig_getRESULT_NOT_FOUND() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_NOT_FOUND_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_NOT_FOUND int = _swig_getRESULT_NOT_FOUND()
func _swig_getRESULT_RECONNECTING() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RESULT_RECONNECTING_gen_37f4c5c4e69870d1())
	return swig_r
}

var RESULT_RECONNECTING int = _swig_getRESULT_RECONNECTING()
const RPLIDAR_CMD_SYNC_BYTE int = 0xA5
const RPLIDAR_CMDFLAG_HAS_PAYLOAD int = 0x80
const RPLIDAR_ANS_SYNC_BYTE1 int = 0xA5
const RPLIDAR_ANS_SYNC_BYTE2 int = 0x5A
const RPLIDAR_ANS_PKTFLAG_LOOP int = 0x1
const RPLIDAR_ANS_HEADER_SIZE_MASK int = 0x3FFFFFFF
func _swig_getRPLIDAR_ANS_HEADER_SUBTYPE_SHIFT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_ANS_HEADER_SUBTYPE_SHIFT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_ANS_HEADER_SUBTYPE_SHIFT int = _swig_getRPLIDAR_ANS_HEADER_SUBTYPE_SHIFT()
type SwigcptrRplidar_cmd_packet_t uintptr

func (p SwigcptrRplidar_cmd_packet_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_cmd_packet_t) SwigIsRplidar_cmd_packet_t() {
}

func (arg1 SwigcptrRplidar_cmd_packet_t) SetSyncByte(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_cmd_packet_t_syncByte_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_cmd_packet_t) GetSyncByte() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_cmd_packet_t_syncByte_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_cmd_packet_t) SetCmd_flag(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_cmd_packet_t_cmd_flag_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_cmd_packet_t) GetCmd_flag() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_cmd_packet_t_cmd_flag_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_cmd_packet_t) SetSize(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_cmd_packet_t_size_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_cmd_packet_t) GetSize() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_cmd_packet_t_size_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_cmd_packet_t) SetData(arg2 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_cmd_packet_t_data_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrRplidar_cmd_packet_t) GetData() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_rplidar_cmd_packet_t_data_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_cmd_packet_t() (_swig_ret Rplidar_cmd_packet_t) {
	var swig_r Rplidar_cmd_packet_t
	swig_r = (Rplidar_cmd_packet_t)(SwigcptrRplidar_cmd_packet_t(C._wrap_new_rplidar_cmd_packet_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_cmd_packet_t(arg1 Rplidar_cmd_packet_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_cmd_packet_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_cmd_packet_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_cmd_packet_t()
	SetSyncByte(arg2 byte)
	GetSyncByte() (_swig_ret byte)
	SetCmd_flag(arg2 byte)
	GetCmd_flag() (_swig_ret byte)
	SetSize(arg2 byte)
	GetSize() (_swig_ret byte)
	SetData(arg2 *byte)
	GetData() (_swig_ret *byte)
}

type SwigcptrRplidar_ans_header_t uintptr

func (p SwigcptrRplidar_ans_header_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_ans_header_t) SwigIsRplidar_ans_header_t() {
}

func (arg1 SwigcptrRplidar_ans_header_t) SetSyncByte1(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_ans_header_t_syncByte1_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_ans_header_t) GetSyncByte1() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_ans_header_t_syncByte1_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_ans_header_t) SetSyncByte2(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_ans_header_t_syncByte2_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_ans_header_t) GetSyncByte2() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_ans_header_t_syncByte2_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_ans_header_t) SetSize_q30_subtype(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_ans_header_t_size_q30_subtype_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_ans_header_t) GetSize_q30_subtype() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_ans_header_t_size_q30_subtype_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_ans_header_t) SetXtype(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_ans_header_t_Xtype_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_ans_header_t) GetXtype() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_ans_header_t_Xtype_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_ans_header_t() (_swig_ret Rplidar_ans_header_t) {
	var swig_r Rplidar_ans_header_t
	swig_r = (Rplidar_ans_header_t)(SwigcptrRplidar_ans_header_t(C._wrap_new_rplidar_ans_header_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_ans_header_t(arg1 Rplidar_ans_header_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_ans_header_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_ans_header_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_ans_header_t()
	SetSyncByte1(arg2 byte)
	GetSyncByte1() (_swig_ret byte)
	SetSyncByte2(arg2 byte)
	GetSyncByte2() (_swig_ret byte)
	SetSize_q30_subtype(arg2 uint)
	GetSize_q30_subtype() (_swig_ret uint)
	SetXtype(arg2 byte)
	GetXtype() (_swig_ret byte)
}

const RPLIDAR_CMD_STOP int = 0x25
const RPLIDAR_CMD_SCAN int = 0x20
const RPLIDAR_CMD_FORCE_SCAN int = 0x21
const RPLIDAR_CMD_RESET int = 0x40
const RPLIDAR_CMD_GET_DEVICE_INFO int = 0x50
const RPLIDAR_CMD_GET_DEVICE_HEALTH int = 0x52
const RPLIDAR_CMD_GET_SAMPLERATE int = 0x59
const RPLIDAR_CMD_HQ_MOTOR_SPEED_CTRL int = 0xA8
const RPLIDAR_CMD_EXPRESS_SCAN int = 0x82
const RPLIDAR_CMD_HQ_SCAN int = 0x83
const RPLIDAR_CMD_GET_LIDAR_CONF int = 0x84
const RPLIDAR_CMD_SET_LIDAR_CONF int = 0x85
const RPLIDAR_CMD_SET_MOTOR_PWM int = 0xF0
const RPLIDAR_CMD_GET_ACC_BOARD_FLAG int = 0xFF
const RPLIDAR_EXPRESS_SCAN_MODE_NORMAL int = 0
const RPLIDAR_EXPRESS_SCAN_MODE_FIXANGLE int = 0
const RPLIDAR_EXPRESS_SCAN_FLAG_BOOST int = 0x0001
const RPLIDAR_EXPRESS_SCAN_FLAG_SUNLIGHT_REJECTION int = 0x0002
const RPLIDAR_ULTRAEXPRESS_SCAN_FLAG_STD int = 0x0001
const RPLIDAR_ULTRAEXPRESS_SCAN_FLAG_HIGH_SENSITIVITY int = 0x0002
func _swig_getRPLIDAR_HQ_SCAN_FLAG_CCW() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_HQ_SCAN_FLAG_CCW_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_HQ_SCAN_FLAG_CCW int = _swig_getRPLIDAR_HQ_SCAN_FLAG_CCW()
func _swig_getRPLIDAR_HQ_SCAN_FLAG_RAW_ENCODER() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_HQ_SCAN_FLAG_RAW_ENCODER_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_HQ_SCAN_FLAG_RAW_ENCODER int = _swig_getRPLIDAR_HQ_SCAN_FLAG_RAW_ENCODER()
func _swig_getRPLIDAR_HQ_SCAN_FLAG_RAW_DISTANCE() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_HQ_SCAN_FLAG_RAW_DISTANCE_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_HQ_SCAN_FLAG_RAW_DISTANCE int = _swig_getRPLIDAR_HQ_SCAN_FLAG_RAW_DISTANCE()
type SwigcptrRplidar_payload_express_scan_t uintptr

func (p SwigcptrRplidar_payload_express_scan_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_payload_express_scan_t) SwigIsRplidar_payload_express_scan_t() {
}

func (arg1 SwigcptrRplidar_payload_express_scan_t) SetWorking_mode(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_express_scan_t_working_mode_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_express_scan_t) GetWorking_mode() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_payload_express_scan_t_working_mode_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_payload_express_scan_t) SetWorking_flags(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_express_scan_t_working_flags_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_express_scan_t) GetWorking_flags() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_payload_express_scan_t_working_flags_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_payload_express_scan_t) SetParam(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_express_scan_t_param_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_express_scan_t) GetParam() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_payload_express_scan_t_param_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_payload_express_scan_t() (_swig_ret Rplidar_payload_express_scan_t) {
	var swig_r Rplidar_payload_express_scan_t
	swig_r = (Rplidar_payload_express_scan_t)(SwigcptrRplidar_payload_express_scan_t(C._wrap_new_rplidar_payload_express_scan_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_payload_express_scan_t(arg1 Rplidar_payload_express_scan_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_payload_express_scan_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_payload_express_scan_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_payload_express_scan_t()
	SetWorking_mode(arg2 byte)
	GetWorking_mode() (_swig_ret byte)
	SetWorking_flags(arg2 uint16)
	GetWorking_flags() (_swig_ret uint16)
	SetParam(arg2 uint16)
	GetParam() (_swig_ret uint16)
}

type SwigcptrRplidar_payload_hq_scan_t uintptr

func (p SwigcptrRplidar_payload_hq_scan_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_payload_hq_scan_t) SwigIsRplidar_payload_hq_scan_t() {
}

func (arg1 SwigcptrRplidar_payload_hq_scan_t) SetFlag(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_hq_scan_t_flag_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_hq_scan_t) GetFlag() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_payload_hq_scan_t_flag_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_payload_hq_scan_t) SetReserved(arg2 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_hq_scan_t_reserved_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_hq_scan_t) GetReserved() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_rplidar_payload_hq_scan_t_reserved_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_payload_hq_scan_t() (_swig_ret Rplidar_payload_hq_scan_t) {
	var swig_r Rplidar_payload_hq_scan_t
	swig_r = (Rplidar_payload_hq_scan_t)(SwigcptrRplidar_payload_hq_scan_t(C._wrap_new_rplidar_payload_hq_scan_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_payload_hq_scan_t(arg1 Rplidar_payload_hq_scan_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_payload_hq_scan_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_payload_hq_scan_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_payload_hq_scan_t()
	SetFlag(arg2 byte)
	GetFlag() (_swig_ret byte)
	SetReserved(arg2 *byte)
	GetReserved() (_swig_ret *byte)
}

type SwigcptrRplidar_payload_get_scan_conf_t uintptr

func (p SwigcptrRplidar_payload_get_scan_conf_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_payload_get_scan_conf_t) SwigIsRplidar_payload_get_scan_conf_t() {
}

func (arg1 SwigcptrRplidar_payload_get_scan_conf_t) SetXtype(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_get_scan_conf_t_Xtype_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_get_scan_conf_t) GetXtype() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_payload_get_scan_conf_t_Xtype_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_payload_get_scan_conf_t) SetReserved(arg2 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_get_scan_conf_t_reserved_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_get_scan_conf_t) GetReserved() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_rplidar_payload_get_scan_conf_t_reserved_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_payload_get_scan_conf_t() (_swig_ret Rplidar_payload_get_scan_conf_t) {
	var swig_r Rplidar_payload_get_scan_conf_t
	swig_r = (Rplidar_payload_get_scan_conf_t)(SwigcptrRplidar_payload_get_scan_conf_t(C._wrap_new_rplidar_payload_get_scan_conf_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_payload_get_scan_conf_t(arg1 Rplidar_payload_get_scan_conf_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_payload_get_scan_conf_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_payload_get_scan_conf_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_payload_get_scan_conf_t()
	SetXtype(arg2 uint)
	GetXtype() (_swig_ret uint)
	SetReserved(arg2 *byte)
	GetReserved() (_swig_ret *byte)
}

const MAX_MOTOR_PWM int = 1023
const DEFAULT_MOTOR_PWM int = 660
type SwigcptrRplidar_payload_motor_pwm_t uintptr

func (p SwigcptrRplidar_payload_motor_pwm_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_payload_motor_pwm_t) SwigIsRplidar_payload_motor_pwm_t() {
}

func (arg1 SwigcptrRplidar_payload_motor_pwm_t) SetPwm_value(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_motor_pwm_t_pwm_value_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_motor_pwm_t) GetPwm_value() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_payload_motor_pwm_t_pwm_value_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_payload_motor_pwm_t() (_swig_ret Rplidar_payload_motor_pwm_t) {
	var swig_r Rplidar_payload_motor_pwm_t
	swig_r = (Rplidar_payload_motor_pwm_t)(SwigcptrRplidar_payload_motor_pwm_t(C._wrap_new_rplidar_payload_motor_pwm_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_payload_motor_pwm_t(arg1 Rplidar_payload_motor_pwm_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_payload_motor_pwm_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_payload_motor_pwm_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_payload_motor_pwm_t()
	SetPwm_value(arg2 uint16)
	GetPwm_value() (_swig_ret uint16)
}

type SwigcptrRplidar_payload_acc_board_flag_t uintptr

func (p SwigcptrRplidar_payload_acc_board_flag_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_payload_acc_board_flag_t) SwigIsRplidar_payload_acc_board_flag_t() {
}

func (arg1 SwigcptrRplidar_payload_acc_board_flag_t) SetReserved(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_acc_board_flag_t_reserved_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_acc_board_flag_t) GetReserved() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_payload_acc_board_flag_t_reserved_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_payload_acc_board_flag_t() (_swig_ret Rplidar_payload_acc_board_flag_t) {
	var swig_r Rplidar_payload_acc_board_flag_t
	swig_r = (Rplidar_payload_acc_board_flag_t)(SwigcptrRplidar_payload_acc_board_flag_t(C._wrap_new_rplidar_payload_acc_board_flag_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_payload_acc_board_flag_t(arg1 Rplidar_payload_acc_board_flag_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_payload_acc_board_flag_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_payload_acc_board_flag_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_payload_acc_board_flag_t()
	SetReserved(arg2 uint)
	GetReserved() (_swig_ret uint)
}

type SwigcptrRplidar_payload_hq_spd_ctrl_t uintptr

func (p SwigcptrRplidar_payload_hq_spd_ctrl_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_payload_hq_spd_ctrl_t) SwigIsRplidar_payload_hq_spd_ctrl_t() {
}

func (arg1 SwigcptrRplidar_payload_hq_spd_ctrl_t) SetRpm(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_payload_hq_spd_ctrl_t_rpm_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_payload_hq_spd_ctrl_t) GetRpm() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_payload_hq_spd_ctrl_t_rpm_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_payload_hq_spd_ctrl_t() (_swig_ret Rplidar_payload_hq_spd_ctrl_t) {
	var swig_r Rplidar_payload_hq_spd_ctrl_t
	swig_r = (Rplidar_payload_hq_spd_ctrl_t)(SwigcptrRplidar_payload_hq_spd_ctrl_t(C._wrap_new_rplidar_payload_hq_spd_ctrl_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_payload_hq_spd_ctrl_t(arg1 Rplidar_payload_hq_spd_ctrl_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_payload_hq_spd_ctrl_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_payload_hq_spd_ctrl_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_payload_hq_spd_ctrl_t()
	SetRpm(arg2 uint16)
	GetRpm() (_swig_ret uint16)
}

const RPLIDAR_ANS_TYPE_DEVINFO int = 0x4
const RPLIDAR_ANS_TYPE_DEVHEALTH int = 0x6
const RPLIDAR_ANS_TYPE_MEASUREMENT int = 0x81
const RPLIDAR_ANS_TYPE_MEASUREMENT_CAPSULED int = 0x82
const RPLIDAR_ANS_TYPE_MEASUREMENT_HQ int = 0x83
const RPLIDAR_ANS_TYPE_SAMPLE_RATE int = 0x15
const RPLIDAR_ANS_TYPE_MEASUREMENT_CAPSULED_ULTRA int = 0x84
const RPLIDAR_ANS_TYPE_GET_LIDAR_CONF int = 0x20
const RPLIDAR_ANS_TYPE_SET_LIDAR_CONF int = 0x21
const RPLIDAR_ANS_TYPE_MEASUREMENT_DENSE_CAPSULED int = 0x85
const RPLIDAR_ANS_TYPE_ACC_BOARD_FLAG int = 0xFF
func _swig_getRPLIDAR_RESP_ACC_BOARD_FLAG_MOTOR_CTRL_SUPPORT_MASK() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_RESP_ACC_BOARD_FLAG_MOTOR_CTRL_SUPPORT_MASK_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_RESP_ACC_BOARD_FLAG_MOTOR_CTRL_SUPPORT_MASK int = _swig_getRPLIDAR_RESP_ACC_BOARD_FLAG_MOTOR_CTRL_SUPPORT_MASK()
type SwigcptrRplidar_response_acc_board_flag_t uintptr

func (p SwigcptrRplidar_response_acc_board_flag_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_acc_board_flag_t) SwigIsRplidar_response_acc_board_flag_t() {
}

func (arg1 SwigcptrRplidar_response_acc_board_flag_t) SetSupport_flag(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_acc_board_flag_t_support_flag_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_acc_board_flag_t) GetSupport_flag() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_response_acc_board_flag_t_support_flag_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_acc_board_flag_t() (_swig_ret Rplidar_response_acc_board_flag_t) {
	var swig_r Rplidar_response_acc_board_flag_t
	swig_r = (Rplidar_response_acc_board_flag_t)(SwigcptrRplidar_response_acc_board_flag_t(C._wrap_new_rplidar_response_acc_board_flag_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_acc_board_flag_t(arg1 Rplidar_response_acc_board_flag_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_acc_board_flag_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_acc_board_flag_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_acc_board_flag_t()
	SetSupport_flag(arg2 uint)
	GetSupport_flag() (_swig_ret uint)
}

const RPLIDAR_STATUS_OK int = 0x0
const RPLIDAR_STATUS_WARNING int = 0x1
const RPLIDAR_STATUS_ERROR int = 0x2
func _swig_getRPLIDAR_RESP_MEASUREMENT_SYNCBIT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_RESP_MEASUREMENT_SYNCBIT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_RESP_MEASUREMENT_SYNCBIT int = _swig_getRPLIDAR_RESP_MEASUREMENT_SYNCBIT()
const RPLIDAR_RESP_MEASUREMENT_QUALITY_SHIFT int = 2
func _swig_getRPLIDAR_RESP_HQ_FLAG_SYNCBIT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_RESP_HQ_FLAG_SYNCBIT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_RESP_HQ_FLAG_SYNCBIT int = _swig_getRPLIDAR_RESP_HQ_FLAG_SYNCBIT()
func _swig_getRPLIDAR_RESP_MEASUREMENT_CHECKBIT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_RESP_MEASUREMENT_CHECKBIT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_RESP_MEASUREMENT_CHECKBIT int = _swig_getRPLIDAR_RESP_MEASUREMENT_CHECKBIT()
const RPLIDAR_RESP_MEASUREMENT_ANGLE_SHIFT int = 1
type SwigcptrRplidar_response_sample_rate_t uintptr

func (p SwigcptrRplidar_response_sample_rate_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_sample_rate_t) SwigIsRplidar_response_sample_rate_t() {
}

func (arg1 SwigcptrRplidar_response_sample_rate_t) SetStd_sample_duration_us(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_sample_rate_t_std_sample_duration_us_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_sample_rate_t) GetStd_sample_duration_us() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_sample_rate_t_std_sample_duration_us_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_sample_rate_t) SetExpress_sample_duration_us(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_sample_rate_t_express_sample_duration_us_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_sample_rate_t) GetExpress_sample_duration_us() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_sample_rate_t_express_sample_duration_us_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_sample_rate_t() (_swig_ret Rplidar_response_sample_rate_t) {
	var swig_r Rplidar_response_sample_rate_t
	swig_r = (Rplidar_response_sample_rate_t)(SwigcptrRplidar_response_sample_rate_t(C._wrap_new_rplidar_response_sample_rate_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_sample_rate_t(arg1 Rplidar_response_sample_rate_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_sample_rate_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_sample_rate_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_sample_rate_t()
	SetStd_sample_duration_us(arg2 uint16)
	GetStd_sample_duration_us() (_swig_ret uint16)
	SetExpress_sample_duration_us(arg2 uint16)
	GetExpress_sample_duration_us() (_swig_ret uint16)
}

type SwigcptrRplidar_response_measurement_node_t uintptr

func (p SwigcptrRplidar_response_measurement_node_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_measurement_node_t) SwigIsRplidar_response_measurement_node_t() {
}

func (arg1 SwigcptrRplidar_response_measurement_node_t) SetSync_quality(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_measurement_node_t_sync_quality_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_measurement_node_t) GetSync_quality() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_measurement_node_t_sync_quality_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_measurement_node_t) SetAngle_q6_checkbit(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_measurement_node_t_angle_q6_checkbit_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_measurement_node_t) GetAngle_q6_checkbit() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_measurement_node_t_angle_q6_checkbit_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_measurement_node_t) SetDistance_q2(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_measurement_node_t_distance_q2_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_measurement_node_t) GetDistance_q2() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_measurement_node_t_distance_q2_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_measurement_node_t() (_swig_ret Rplidar_response_measurement_node_t) {
	var swig_r Rplidar_response_measurement_node_t
	swig_r = (Rplidar_response_measurement_node_t)(SwigcptrRplidar_response_measurement_node_t(C._wrap_new_rplidar_response_measurement_node_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_measurement_node_t(arg1 Rplidar_response_measurement_node_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_measurement_node_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_measurement_node_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_measurement_node_t()
	SetSync_quality(arg2 byte)
	GetSync_quality() (_swig_ret byte)
	SetAngle_q6_checkbit(arg2 uint16)
	GetAngle_q6_checkbit() (_swig_ret uint16)
	SetDistance_q2(arg2 uint16)
	GetDistance_q2() (_swig_ret uint16)
}

func _swig_getRPLIDAR_RESP_MEASUREMENT_EXP_ANGLE_MASK() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_RESP_MEASUREMENT_EXP_ANGLE_MASK_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_RESP_MEASUREMENT_EXP_ANGLE_MASK int = _swig_getRPLIDAR_RESP_MEASUREMENT_EXP_ANGLE_MASK()
func _swig_getRPLIDAR_RESP_MEASUREMENT_EXP_DISTANCE_MASK() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_RESP_MEASUREMENT_EXP_DISTANCE_MASK_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_RESP_MEASUREMENT_EXP_DISTANCE_MASK int = _swig_getRPLIDAR_RESP_MEASUREMENT_EXP_DISTANCE_MASK()
type SwigcptrRplidar_response_cabin_nodes_t uintptr

func (p SwigcptrRplidar_response_cabin_nodes_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_cabin_nodes_t) SwigIsRplidar_response_cabin_nodes_t() {
}

func (arg1 SwigcptrRplidar_response_cabin_nodes_t) SetDistance_angle_1(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_cabin_nodes_t_distance_angle_1_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_cabin_nodes_t) GetDistance_angle_1() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_cabin_nodes_t_distance_angle_1_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_cabin_nodes_t) SetDistance_angle_2(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_cabin_nodes_t_distance_angle_2_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_cabin_nodes_t) GetDistance_angle_2() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_cabin_nodes_t_distance_angle_2_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_cabin_nodes_t) SetOffset_angles_q3(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_cabin_nodes_t_offset_angles_q3_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_cabin_nodes_t) GetOffset_angles_q3() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_cabin_nodes_t_offset_angles_q3_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_cabin_nodes_t() (_swig_ret Rplidar_response_cabin_nodes_t) {
	var swig_r Rplidar_response_cabin_nodes_t
	swig_r = (Rplidar_response_cabin_nodes_t)(SwigcptrRplidar_response_cabin_nodes_t(C._wrap_new_rplidar_response_cabin_nodes_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_cabin_nodes_t(arg1 Rplidar_response_cabin_nodes_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_cabin_nodes_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_cabin_nodes_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_cabin_nodes_t()
	SetDistance_angle_1(arg2 uint16)
	GetDistance_angle_1() (_swig_ret uint16)
	SetDistance_angle_2(arg2 uint16)
	GetDistance_angle_2() (_swig_ret uint16)
	SetOffset_angles_q3(arg2 byte)
	GetOffset_angles_q3() (_swig_ret byte)
}

const RPLIDAR_RESP_MEASUREMENT_EXP_SYNC_1 int = 0xA
const RPLIDAR_RESP_MEASUREMENT_EXP_SYNC_2 int = 0x5
const RPLIDAR_RESP_MEASUREMENT_HQ_SYNC int = 0xA5
func _swig_getRPLIDAR_RESP_MEASUREMENT_EXP_SYNCBIT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RPLIDAR_RESP_MEASUREMENT_EXP_SYNCBIT_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPLIDAR_RESP_MEASUREMENT_EXP_SYNCBIT int = _swig_getRPLIDAR_RESP_MEASUREMENT_EXP_SYNCBIT()
type SwigcptrRplidar_response_capsule_measurement_nodes_t uintptr

func (p SwigcptrRplidar_response_capsule_measurement_nodes_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_capsule_measurement_nodes_t) SwigIsRplidar_response_capsule_measurement_nodes_t() {
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) SetS_checksum_1(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_1_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) GetS_checksum_1() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_1_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) SetS_checksum_2(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_2_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) GetS_checksum_2() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_capsule_measurement_nodes_t_s_checksum_2_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) SetStart_angle_sync_q6(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_capsule_measurement_nodes_t_start_angle_sync_q6_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) GetStart_angle_sync_q6() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_capsule_measurement_nodes_t_start_angle_sync_q6_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) SetCabins(arg2 Rplidar_response_cabin_nodes_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_rplidar_response_capsule_measurement_nodes_t_cabins_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_capsule_measurement_nodes_t) GetCabins() (_swig_ret Rplidar_response_cabin_nodes_t) {
	var swig_r Rplidar_response_cabin_nodes_t
	_swig_i_0 := arg1
	swig_r = (Rplidar_response_cabin_nodes_t)(SwigcptrRplidar_response_cabin_nodes_t(C._wrap_rplidar_response_capsule_measurement_nodes_t_cabins_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRplidar_response_capsule_measurement_nodes_t() (_swig_ret Rplidar_response_capsule_measurement_nodes_t) {
	var swig_r Rplidar_response_capsule_measurement_nodes_t
	swig_r = (Rplidar_response_capsule_measurement_nodes_t)(SwigcptrRplidar_response_capsule_measurement_nodes_t(C._wrap_new_rplidar_response_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_capsule_measurement_nodes_t(arg1 Rplidar_response_capsule_measurement_nodes_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_capsule_measurement_nodes_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_capsule_measurement_nodes_t()
	SetS_checksum_1(arg2 byte)
	GetS_checksum_1() (_swig_ret byte)
	SetS_checksum_2(arg2 byte)
	GetS_checksum_2() (_swig_ret byte)
	SetStart_angle_sync_q6(arg2 uint16)
	GetStart_angle_sync_q6() (_swig_ret uint16)
	SetCabins(arg2 Rplidar_response_cabin_nodes_t)
	GetCabins() (_swig_ret Rplidar_response_cabin_nodes_t)
}

type SwigcptrRplidar_response_dense_cabin_nodes_t uintptr

func (p SwigcptrRplidar_response_dense_cabin_nodes_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_dense_cabin_nodes_t) SwigIsRplidar_response_dense_cabin_nodes_t() {
}

func (arg1 SwigcptrRplidar_response_dense_cabin_nodes_t) SetDistance(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_dense_cabin_nodes_t_distance_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_dense_cabin_nodes_t) GetDistance() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_dense_cabin_nodes_t_distance_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_dense_cabin_nodes_t() (_swig_ret Rplidar_response_dense_cabin_nodes_t) {
	var swig_r Rplidar_response_dense_cabin_nodes_t
	swig_r = (Rplidar_response_dense_cabin_nodes_t)(SwigcptrRplidar_response_dense_cabin_nodes_t(C._wrap_new_rplidar_response_dense_cabin_nodes_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_dense_cabin_nodes_t(arg1 Rplidar_response_dense_cabin_nodes_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_dense_cabin_nodes_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_dense_cabin_nodes_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_dense_cabin_nodes_t()
	SetDistance(arg2 uint16)
	GetDistance() (_swig_ret uint16)
}

type SwigcptrRplidar_response_dense_capsule_measurement_nodes_t uintptr

func (p SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) SwigIsRplidar_response_dense_capsule_measurement_nodes_t() {
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) SetS_checksum_1(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_1_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) GetS_checksum_1() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_1_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) SetS_checksum_2(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_2_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) GetS_checksum_2() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_s_checksum_2_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) SetStart_angle_sync_q6(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_start_angle_sync_q6_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) GetStart_angle_sync_q6() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_start_angle_sync_q6_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) SetCabins(arg2 Rplidar_response_dense_cabin_nodes_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_cabins_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_dense_capsule_measurement_nodes_t) GetCabins() (_swig_ret Rplidar_response_dense_cabin_nodes_t) {
	var swig_r Rplidar_response_dense_cabin_nodes_t
	_swig_i_0 := arg1
	swig_r = (Rplidar_response_dense_cabin_nodes_t)(SwigcptrRplidar_response_dense_cabin_nodes_t(C._wrap_rplidar_response_dense_capsule_measurement_nodes_t_cabins_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRplidar_response_dense_capsule_measurement_nodes_t() (_swig_ret Rplidar_response_dense_capsule_measurement_nodes_t) {
	var swig_r Rplidar_response_dense_capsule_measurement_nodes_t
	swig_r = (Rplidar_response_dense_capsule_measurement_nodes_t)(SwigcptrRplidar_response_dense_capsule_measurement_nodes_t(C._wrap_new_rplidar_response_dense_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_dense_capsule_measurement_nodes_t(arg1 Rplidar_response_dense_capsule_measurement_nodes_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_dense_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_dense_capsule_measurement_nodes_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_dense_capsule_measurement_nodes_t()
	SetS_checksum_1(arg2 byte)
	GetS_checksum_1() (_swig_ret byte)
	SetS_checksum_2(arg2 byte)
	GetS_checksum_2() (_swig_ret byte)
	SetStart_angle_sync_q6(arg2 uint16)
	GetStart_angle_sync_q6() (_swig_ret uint16)
	SetCabins(arg2 Rplidar_response_dense_cabin_nodes_t)
	GetCabins() (_swig_ret Rplidar_response_dense_cabin_nodes_t)
}

const RPLIDAR_RESP_MEASUREMENT_EXP_ULTRA_MAJOR_BITS int = 12
const RPLIDAR_RESP_MEASUREMENT_EXP_ULTRA_PREDICT_BITS int = 10
type SwigcptrRplidar_response_ultra_cabin_nodes_t uintptr

func (p SwigcptrRplidar_response_ultra_cabin_nodes_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_ultra_cabin_nodes_t) SwigIsRplidar_response_ultra_cabin_nodes_t() {
}

func (arg1 SwigcptrRplidar_response_ultra_cabin_nodes_t) SetCombined_x3(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_ultra_cabin_nodes_t_combined_x3_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_ultra_cabin_nodes_t) GetCombined_x3() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_response_ultra_cabin_nodes_t_combined_x3_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_ultra_cabin_nodes_t() (_swig_ret Rplidar_response_ultra_cabin_nodes_t) {
	var swig_r Rplidar_response_ultra_cabin_nodes_t
	swig_r = (Rplidar_response_ultra_cabin_nodes_t)(SwigcptrRplidar_response_ultra_cabin_nodes_t(C._wrap_new_rplidar_response_ultra_cabin_nodes_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_ultra_cabin_nodes_t(arg1 Rplidar_response_ultra_cabin_nodes_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_ultra_cabin_nodes_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_ultra_cabin_nodes_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_ultra_cabin_nodes_t()
	SetCombined_x3(arg2 uint)
	GetCombined_x3() (_swig_ret uint)
}

type SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t uintptr

func (p SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) SwigIsRplidar_response_ultra_capsule_measurement_nodes_t() {
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) SetS_checksum_1(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_1_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) GetS_checksum_1() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_1_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) SetS_checksum_2(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_2_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) GetS_checksum_2() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_s_checksum_2_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) SetStart_angle_sync_q6(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_start_angle_sync_q6_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) GetStart_angle_sync_q6() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_start_angle_sync_q6_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) SetUltra_cabins(arg2 Rplidar_response_ultra_cabin_nodes_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_ultra_cabins_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t) GetUltra_cabins() (_swig_ret Rplidar_response_ultra_cabin_nodes_t) {
	var swig_r Rplidar_response_ultra_cabin_nodes_t
	_swig_i_0 := arg1
	swig_r = (Rplidar_response_ultra_cabin_nodes_t)(SwigcptrRplidar_response_ultra_cabin_nodes_t(C._wrap_rplidar_response_ultra_capsule_measurement_nodes_t_ultra_cabins_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRplidar_response_ultra_capsule_measurement_nodes_t() (_swig_ret Rplidar_response_ultra_capsule_measurement_nodes_t) {
	var swig_r Rplidar_response_ultra_capsule_measurement_nodes_t
	swig_r = (Rplidar_response_ultra_capsule_measurement_nodes_t)(SwigcptrRplidar_response_ultra_capsule_measurement_nodes_t(C._wrap_new_rplidar_response_ultra_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_ultra_capsule_measurement_nodes_t(arg1 Rplidar_response_ultra_capsule_measurement_nodes_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_ultra_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_ultra_capsule_measurement_nodes_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_ultra_capsule_measurement_nodes_t()
	SetS_checksum_1(arg2 byte)
	GetS_checksum_1() (_swig_ret byte)
	SetS_checksum_2(arg2 byte)
	GetS_checksum_2() (_swig_ret byte)
	SetStart_angle_sync_q6(arg2 uint16)
	GetStart_angle_sync_q6() (_swig_ret uint16)
	SetUltra_cabins(arg2 Rplidar_response_ultra_cabin_nodes_t)
	GetUltra_cabins() (_swig_ret Rplidar_response_ultra_cabin_nodes_t)
}

type SwigcptrRplidar_response_measurement_node_hq_t uintptr

func (p SwigcptrRplidar_response_measurement_node_hq_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_measurement_node_hq_t) SwigIsRplidar_response_measurement_node_hq_t() {
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) SetAngle_z_q14(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_measurement_node_hq_t_angle_z_q14_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) GetAngle_z_q14() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_measurement_node_hq_t_angle_z_q14_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) SetDist_mm_q2(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_measurement_node_hq_t_dist_mm_q2_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) GetDist_mm_q2() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_response_measurement_node_hq_t_dist_mm_q2_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) SetQuality(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_measurement_node_hq_t_quality_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) GetQuality() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_measurement_node_hq_t_quality_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) SetFlag(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_measurement_node_hq_t_flag_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_measurement_node_hq_t) GetFlag() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_measurement_node_hq_t_flag_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_measurement_node_hq_t() (_swig_ret Rplidar_response_measurement_node_hq_t) {
	var swig_r Rplidar_response_measurement_node_hq_t
	swig_r = (Rplidar_response_measurement_node_hq_t)(SwigcptrRplidar_response_measurement_node_hq_t(C._wrap_new_rplidar_response_measurement_node_hq_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_measurement_node_hq_t(arg1 Rplidar_response_measurement_node_hq_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_measurement_node_hq_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_measurement_node_hq_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_measurement_node_hq_t()
	SetAngle_z_q14(arg2 uint16)
	GetAngle_z_q14() (_swig_ret uint16)
	SetDist_mm_q2(arg2 uint)
	GetDist_mm_q2() (_swig_ret uint)
	SetQuality(arg2 byte)
	GetQuality() (_swig_ret byte)
	SetFlag(arg2 byte)
	GetFlag() (_swig_ret byte)
}

type SwigcptrRplidar_response_hq_capsule_measurement_nodes_t uintptr

func (p SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) SwigIsRplidar_response_hq_capsule_measurement_nodes_t() {
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) SetSync_byte(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_sync_byte_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) GetSync_byte() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_sync_byte_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) SetTime_stamp(arg2 uint64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_time_stamp_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_type_1(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) GetTime_stamp() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_time_stamp_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) SetNode_hq(arg2 Rplidar_response_measurement_node_hq_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_node_hq_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) GetNode_hq() (_swig_ret Rplidar_response_measurement_node_hq_t) {
	var swig_r Rplidar_response_measurement_node_hq_t
	_swig_i_0 := arg1
	swig_r = (Rplidar_response_measurement_node_hq_t)(SwigcptrRplidar_response_measurement_node_hq_t(C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_node_hq_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) SetCrc32(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_crc32_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_hq_capsule_measurement_nodes_t) GetCrc32() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_response_hq_capsule_measurement_nodes_t_crc32_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_hq_capsule_measurement_nodes_t() (_swig_ret Rplidar_response_hq_capsule_measurement_nodes_t) {
	var swig_r Rplidar_response_hq_capsule_measurement_nodes_t
	swig_r = (Rplidar_response_hq_capsule_measurement_nodes_t)(SwigcptrRplidar_response_hq_capsule_measurement_nodes_t(C._wrap_new_rplidar_response_hq_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_hq_capsule_measurement_nodes_t(arg1 Rplidar_response_hq_capsule_measurement_nodes_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_hq_capsule_measurement_nodes_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_hq_capsule_measurement_nodes_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_hq_capsule_measurement_nodes_t()
	SetSync_byte(arg2 byte)
	GetSync_byte() (_swig_ret byte)
	SetTime_stamp(arg2 uint64)
	GetTime_stamp() (_swig_ret uint64)
	SetNode_hq(arg2 Rplidar_response_measurement_node_hq_t)
	GetNode_hq() (_swig_ret Rplidar_response_measurement_node_hq_t)
	SetCrc32(arg2 uint)
	GetCrc32() (_swig_ret uint)
}

const RPLIDAR_CONF_SCAN_COMMAND_STD int = 0
const RPLIDAR_CONF_SCAN_COMMAND_EXPRESS int = 1
const RPLIDAR_CONF_SCAN_COMMAND_HQ int = 2
const RPLIDAR_CONF_SCAN_COMMAND_BOOST int = 3
const RPLIDAR_CONF_SCAN_COMMAND_STABILITY int = 4
const RPLIDAR_CONF_SCAN_COMMAND_SENSITIVITY int = 5
const RPLIDAR_CONF_ANGLE_RANGE int = 0x00000000
const RPLIDAR_CONF_DESIRED_ROT_FREQ int = 0x00000001
const RPLIDAR_CONF_SCAN_COMMAND_BITMAP int = 0x00000002
const RPLIDAR_CONF_MIN_ROT_FREQ int = 0x00000004
const RPLIDAR_CONF_MAX_ROT_FREQ int = 0x00000005
const RPLIDAR_CONF_MAX_DISTANCE int = 0x00000060
const RPLIDAR_CONF_SCAN_MODE_COUNT int = 0x00000070
const RPLIDAR_CONF_SCAN_MODE_US_PER_SAMPLE int = 0x00000071
const RPLIDAR_CONF_SCAN_MODE_MAX_DISTANCE int = 0x00000074
const RPLIDAR_CONF_SCAN_MODE_ANS_TYPE int = 0x00000075
const RPLIDAR_CONF_SCAN_MODE_TYPICAL int = 0x0000007C
const RPLIDAR_CONF_SCAN_MODE_NAME int = 0x0000007F
const RPLIDAR_EXPRESS_SCAN_STABILITY_BITMAP int = 4
const RPLIDAR_EXPRESS_SCAN_SENSITIVITY_BITMAP int = 5
type SwigcptrRplidar_response_get_lidar_conf_t uintptr

func (p SwigcptrRplidar_response_get_lidar_conf_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_get_lidar_conf_t) SwigIsRplidar_response_get_lidar_conf_t() {
}

func (arg1 SwigcptrRplidar_response_get_lidar_conf_t) SetXtype(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_get_lidar_conf_t_Xtype_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_get_lidar_conf_t) GetXtype() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_response_get_lidar_conf_t_Xtype_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_get_lidar_conf_t) SetPayload(arg2 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_get_lidar_conf_t_payload_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_get_lidar_conf_t) GetPayload() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_rplidar_response_get_lidar_conf_t_payload_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_get_lidar_conf_t() (_swig_ret Rplidar_response_get_lidar_conf_t) {
	var swig_r Rplidar_response_get_lidar_conf_t
	swig_r = (Rplidar_response_get_lidar_conf_t)(SwigcptrRplidar_response_get_lidar_conf_t(C._wrap_new_rplidar_response_get_lidar_conf_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_get_lidar_conf_t(arg1 Rplidar_response_get_lidar_conf_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_get_lidar_conf_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_get_lidar_conf_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_get_lidar_conf_t()
	SetXtype(arg2 uint)
	GetXtype() (_swig_ret uint)
	SetPayload(arg2 *byte)
	GetPayload() (_swig_ret *byte)
}

type SwigcptrRplidar_response_set_lidar_conf_t uintptr

func (p SwigcptrRplidar_response_set_lidar_conf_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_set_lidar_conf_t) SwigIsRplidar_response_set_lidar_conf_t() {
}

func (arg1 SwigcptrRplidar_response_set_lidar_conf_t) SetResult(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_set_lidar_conf_t_result_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_set_lidar_conf_t) GetResult() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_rplidar_response_set_lidar_conf_t_result_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_set_lidar_conf_t() (_swig_ret Rplidar_response_set_lidar_conf_t) {
	var swig_r Rplidar_response_set_lidar_conf_t
	swig_r = (Rplidar_response_set_lidar_conf_t)(SwigcptrRplidar_response_set_lidar_conf_t(C._wrap_new_rplidar_response_set_lidar_conf_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_set_lidar_conf_t(arg1 Rplidar_response_set_lidar_conf_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_set_lidar_conf_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_set_lidar_conf_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_set_lidar_conf_t()
	SetResult(arg2 uint)
	GetResult() (_swig_ret uint)
}

type SwigcptrRplidar_response_device_info_t uintptr

func (p SwigcptrRplidar_response_device_info_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_device_info_t) SwigIsRplidar_response_device_info_t() {
}

func (arg1 SwigcptrRplidar_response_device_info_t) SetModel(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_device_info_t_model_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_device_info_t) GetModel() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_device_info_t_model_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_device_info_t) SetFirmware_version(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_device_info_t_firmware_version_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_device_info_t) GetFirmware_version() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_device_info_t_firmware_version_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_device_info_t) SetHardware_version(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_device_info_t_hardware_version_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_device_info_t) GetHardware_version() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_device_info_t_hardware_version_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_device_info_t) SetSerialnum(arg2 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_device_info_t_serialnum_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_device_info_t) GetSerialnum() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_rplidar_response_device_info_t_serialnum_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_device_info_t() (_swig_ret Rplidar_response_device_info_t) {
	var swig_r Rplidar_response_device_info_t
	swig_r = (Rplidar_response_device_info_t)(SwigcptrRplidar_response_device_info_t(C._wrap_new_rplidar_response_device_info_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_device_info_t(arg1 Rplidar_response_device_info_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_device_info_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_device_info_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_device_info_t()
	SetModel(arg2 byte)
	GetModel() (_swig_ret byte)
	SetFirmware_version(arg2 uint16)
	GetFirmware_version() (_swig_ret uint16)
	SetHardware_version(arg2 byte)
	GetHardware_version() (_swig_ret byte)
	SetSerialnum(arg2 *byte)
	GetSerialnum() (_swig_ret *byte)
}

type SwigcptrRplidar_response_device_health_t uintptr

func (p SwigcptrRplidar_response_device_health_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidar_response_device_health_t) SwigIsRplidar_response_device_health_t() {
}

func (arg1 SwigcptrRplidar_response_device_health_t) SetStatus(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_device_health_t_status_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_device_health_t) GetStatus() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_rplidar_response_device_health_t_status_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidar_response_device_health_t) SetError_code(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_rplidar_response_device_health_t_error_code_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidar_response_device_health_t) GetError_code() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_rplidar_response_device_health_t_error_code_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRplidar_response_device_health_t() (_swig_ret Rplidar_response_device_health_t) {
	var swig_r Rplidar_response_device_health_t
	swig_r = (Rplidar_response_device_health_t)(SwigcptrRplidar_response_device_health_t(C._wrap_new_rplidar_response_device_health_t_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidar_response_device_health_t(arg1 Rplidar_response_device_health_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_rplidar_response_device_health_t_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type Rplidar_response_device_health_t interface {
	Swigcptr() uintptr
	SwigIsRplidar_response_device_health_t()
	SetStatus(arg2 byte)
	GetStatus() (_swig_ret byte)
	SetError_code(arg2 uint16)
	GetError_code() (_swig_ret uint16)
}

const RPLIDAR_VARBITSCALE_X2_SRC_BIT int = 9
const RPLIDAR_VARBITSCALE_X4_SRC_BIT int = 11
const RPLIDAR_VARBITSCALE_X8_SRC_BIT int = 12
const RPLIDAR_VARBITSCALE_X16_SRC_BIT int = 14
const RPLIDAR_VARBITSCALE_X2_DEST_VAL int = 512
const RPLIDAR_VARBITSCALE_X4_DEST_VAL int = 1280
const RPLIDAR_VARBITSCALE_X8_DEST_VAL int = 1792
const RPLIDAR_VARBITSCALE_X16_DEST_VAL int = 3328
type SwigcptrRplidarScanMode uintptr

func (p SwigcptrRplidarScanMode) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRplidarScanMode) SwigIsRplidarScanMode() {
}

func (arg1 SwigcptrRplidarScanMode) SetId(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RplidarScanMode_id_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrRplidarScanMode) GetId() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_RplidarScanMode_id_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidarScanMode) SetUs_per_sample(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RplidarScanMode_us_per_sample_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrRplidarScanMode) GetUs_per_sample() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_RplidarScanMode_us_per_sample_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidarScanMode) SetMax_distance(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RplidarScanMode_max_distance_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrRplidarScanMode) GetMax_distance() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_RplidarScanMode_max_distance_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidarScanMode) SetAns_type(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RplidarScanMode_ans_type_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRplidarScanMode) GetAns_type() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RplidarScanMode_ans_type_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRplidarScanMode) SetScan_mode(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RplidarScanMode_scan_mode_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRplidarScanMode) GetScan_mode() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RplidarScanMode_scan_mode_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewRplidarScanMode() (_swig_ret RplidarScanMode) {
	var swig_r RplidarScanMode
	swig_r = (RplidarScanMode)(SwigcptrRplidarScanMode(C._wrap_new_RplidarScanMode_gen_37f4c5c4e69870d1()))
	return swig_r
}

func DeleteRplidarScanMode(arg1 RplidarScanMode) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RplidarScanMode_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type RplidarScanMode interface {
	Swigcptr() uintptr
	SwigIsRplidarScanMode()
	SetId(arg2 uint16)
	GetId() (_swig_ret uint16)
	SetUs_per_sample(arg2 float32)
	GetUs_per_sample() (_swig_ret float32)
	SetMax_distance(arg2 float32)
	GetMax_distance() (_swig_ret float32)
	SetAns_type(arg2 byte)
	GetAns_type() (_swig_ret byte)
	SetScan_mode(arg2 string)
	GetScan_mode() (_swig_ret string)
}

func _swig_getDRIVER_TYPE_SERIALPORT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DRIVER_TYPE_SERIALPORT_gen_37f4c5c4e69870d1())
	return swig_r
}

var DRIVER_TYPE_SERIALPORT int = _swig_getDRIVER_TYPE_SERIALPORT()
func _swig_getDRIVER_TYPE_TCP() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DRIVER_TYPE_TCP_gen_37f4c5c4e69870d1())
	return swig_r
}

var DRIVER_TYPE_TCP int = _swig_getDRIVER_TYPE_TCP()
type SwigcptrChannelDevice uintptr

func (p SwigcptrChannelDevice) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrChannelDevice) SwigIsChannelDevice() {
}

func (arg1 SwigcptrChannelDevice) Bind(arg2 string, arg3 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ChannelDevice_bind_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrChannelDevice) Open() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ChannelDevice_open_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrChannelDevice) Close() {
	_swig_i_0 := arg1
	C._wrap_ChannelDevice_close_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrChannelDevice) Flush() {
	_swig_i_0 := arg1
	C._wrap_ChannelDevice_flush_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrChannelDevice) Waitfordata__SWIG_0(arg2 int64, arg3 uint, arg4 *int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_ChannelDevice_waitfordata__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_type_6(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrChannelDevice) Waitfordata__SWIG_1(arg2 int64, arg3 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ChannelDevice_waitfordata__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_type_7(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrChannelDevice) Waitfordata__SWIG_2(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ChannelDevice_waitfordata__SWIG_2_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_type_8(_swig_i_1)))
	return swig_r
}

func (p SwigcptrChannelDevice) Waitfordata(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.Waitfordata__SWIG_2(a[0].(int64))
	}
	if argc == 2 {
		return p.Waitfordata__SWIG_1(a[0].(int64), a[1].(uint))
	}
	if argc == 3 {
		return p.Waitfordata__SWIG_0(a[0].(int64), a[1].(uint), a[2].(*int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrChannelDevice) Senddata(arg2 *byte, arg3 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_ChannelDevice_senddata_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_type_9(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrChannelDevice) Recvdata(arg2 *byte, arg3 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_ChannelDevice_recvdata_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_type_10(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrChannelDevice) SetDTR() {
	_swig_i_0 := arg1
	C._wrap_ChannelDevice_setDTR_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrChannelDevice) ClearDTR() {
	_swig_i_0 := arg1
	C._wrap_ChannelDevice_clearDTR_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrChannelDevice) ReleaseRxTx() {
	_swig_i_0 := arg1
	C._wrap_ChannelDevice_ReleaseRxTx_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func DeleteChannelDevice(arg1 ChannelDevice) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ChannelDevice_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

type ChannelDevice interface {
	Swigcptr() uintptr
	SwigIsChannelDevice()
	Bind(arg2 string, arg3 uint) (_swig_ret bool)
	Open() (_swig_ret bool)
	Close()
	Flush()
	Waitfordata(a ...interface{}) bool
	Senddata(arg2 *byte, arg3 int64) (_swig_ret int)
	Recvdata(arg2 *byte, arg3 int64) (_swig_ret int)
	SetDTR()
	ClearDTR()
	ReleaseRxTx()
}

type SwigcptrRPlidarDriver uintptr

func (p SwigcptrRPlidarDriver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRPlidarDriver) SwigIsRPlidarDriver() {
}

func _swig_getRPlidarDriver_DEFAULT_TIMEOUT_RPlidarDriver() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DEFAULT_TIMEOUT_RPlidarDriver_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPlidarDriverDEFAULT_TIMEOUT int = _swig_getRPlidarDriver_DEFAULT_TIMEOUT_RPlidarDriver()
func _swig_getRPlidarDriver_MAX_SCAN_NODES_RPlidarDriver() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_MAX_SCAN_NODES_RPlidarDriver_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPlidarDriverMAX_SCAN_NODES int = _swig_getRPlidarDriver_MAX_SCAN_NODES_RPlidarDriver()
func _swig_getRPlidarDriver_LEGACY_SAMPLE_DURATION_RPlidarDriver() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_LEGACY_SAMPLE_DURATION_RPlidarDriver_gen_37f4c5c4e69870d1())
	return swig_r
}

var RPlidarDriverLEGACY_SAMPLE_DURATION int = _swig_getRPlidarDriver_LEGACY_SAMPLE_DURATION_RPlidarDriver()
func RPlidarDriverCreateDriver__SWIG_0(arg1 uint) (_swig_ret RPlidarDriver) {
	var swig_r RPlidarDriver
	_swig_i_0 := arg1
	swig_r = (RPlidarDriver)(SwigcptrRPlidarDriver(C._wrap_RPlidarDriver_CreateDriver__SWIG_0_gen_37f4c5c4e69870d1(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func RPlidarDriverCreateDriver__SWIG_1() (_swig_ret RPlidarDriver) {
	var swig_r RPlidarDriver
	swig_r = (RPlidarDriver)(SwigcptrRPlidarDriver(C._wrap_RPlidarDriver_CreateDriver__SWIG_1_gen_37f4c5c4e69870d1()))
	return swig_r
}

func RPlidarDriverCreateDriver(a ...interface{}) RPlidarDriver {
	argc := len(a)
	if argc == 0 {
		return RPlidarDriverCreateDriver__SWIG_1()
	}
	if argc == 1 {
		return RPlidarDriverCreateDriver__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

func RPlidarDriverDisposeDriver(arg1 RPlidarDriver) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_RPlidarDriver_DisposeDriver_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRPlidarDriver) Connect__SWIG_0(arg2 string, arg3 uint, arg4 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (uint)(C._wrap_RPlidarDriver_connect__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) Connect__SWIG_1(arg2 string, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_connect__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrRPlidarDriver) Connect(a ...interface{}) uint {
	argc := len(a)
	if argc == 2 {
		return p.Connect__SWIG_1(a[0].(string), a[1].(uint))
	}
	if argc == 3 {
		return p.Connect__SWIG_0(a[0].(string), a[1].(uint), a[2].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) Disconnect() {
	_swig_i_0 := arg1
	C._wrap_RPlidarDriver_disconnect_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRPlidarDriver) IsConnected() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RPlidarDriver_isConnected_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) Reset__SWIG_0(arg2 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_reset__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) Reset__SWIG_1() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RPlidarDriver_reset__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) Reset(a ...interface{}) uint {
	argc := len(a)
	if argc == 0 {
		return p.Reset__SWIG_1()
	}
	if argc == 1 {
		return p.Reset__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) ClearNetSerialRxCache() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RPlidarDriver_clearNetSerialRxCache_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetAllSupportedScanModes__SWIG_0(arg2 Std_vector_Sl_rp_standalone_rplidar_RplidarScanMode_Sg_, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_getAllSupportedScanModes__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetAllSupportedScanModes__SWIG_1(arg2 Std_vector_Sl_rp_standalone_rplidar_RplidarScanMode_Sg_) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (uint)(C._wrap_RPlidarDriver_getAllSupportedScanModes__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GetAllSupportedScanModes(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.GetAllSupportedScanModes__SWIG_1(a[0].(Std_vector_Sl_rp_standalone_rplidar_RplidarScanMode_Sg_))
	}
	if argc == 2 {
		return p.GetAllSupportedScanModes__SWIG_0(a[0].(Std_vector_Sl_rp_standalone_rplidar_RplidarScanMode_Sg_), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GetTypicalScanMode__SWIG_0(arg2 *uint16, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_getTypicalScanMode__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetTypicalScanMode__SWIG_1(arg2 *uint16) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_getTypicalScanMode__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GetTypicalScanMode(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.GetTypicalScanMode__SWIG_1(a[0].(*uint16))
	}
	if argc == 2 {
		return p.GetTypicalScanMode__SWIG_0(a[0].(*uint16), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) StartScan__SWIG_0(arg2 bool, arg3 bool, arg4 uint, arg5 RplidarScanMode) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (uint)(C._wrap_RPlidarDriver_startScan__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C._Bool(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) StartScan__SWIG_1(arg2 bool, arg3 bool, arg4 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (uint)(C._wrap_RPlidarDriver_startScan__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C._Bool(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) StartScan__SWIG_2(arg2 bool, arg3 bool) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_startScan__SWIG_2_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) StartScan(a ...interface{}) uint {
	argc := len(a)
	if argc == 2 {
		return p.StartScan__SWIG_2(a[0].(bool), a[1].(bool))
	}
	if argc == 3 {
		return p.StartScan__SWIG_1(a[0].(bool), a[1].(bool), a[2].(uint))
	}
	if argc == 4 {
		return p.StartScan__SWIG_0(a[0].(bool), a[1].(bool), a[2].(uint), a[3].(RplidarScanMode))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) StartScanExpress__SWIG_0(arg2 bool, arg3 uint16, arg4 uint, arg5 RplidarScanMode, arg6 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	swig_r = (uint)(C._wrap_RPlidarDriver_startScanExpress__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.short(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) StartScanExpress__SWIG_1(arg2 bool, arg3 uint16, arg4 uint, arg5 RplidarScanMode) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (uint)(C._wrap_RPlidarDriver_startScanExpress__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.short(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) StartScanExpress__SWIG_2(arg2 bool, arg3 uint16, arg4 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (uint)(C._wrap_RPlidarDriver_startScanExpress__SWIG_2_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.short(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) StartScanExpress__SWIG_3(arg2 bool, arg3 uint16) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_startScanExpress__SWIG_3_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.short(_swig_i_2)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) StartScanExpress(a ...interface{}) uint {
	argc := len(a)
	if argc == 2 {
		return p.StartScanExpress__SWIG_3(a[0].(bool), a[1].(uint16))
	}
	if argc == 3 {
		return p.StartScanExpress__SWIG_2(a[0].(bool), a[1].(uint16), a[2].(uint))
	}
	if argc == 4 {
		return p.StartScanExpress__SWIG_1(a[0].(bool), a[1].(uint16), a[2].(uint), a[3].(RplidarScanMode))
	}
	if argc == 5 {
		return p.StartScanExpress__SWIG_0(a[0].(bool), a[1].(uint16), a[2].(uint), a[3].(RplidarScanMode), a[4].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GetHealth__SWIG_0(arg2 Rplidar_response_device_health_t, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_getHealth__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetHealth__SWIG_1(arg2 Rplidar_response_device_health_t) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (uint)(C._wrap_RPlidarDriver_getHealth__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GetHealth(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.GetHealth__SWIG_1(a[0].(Rplidar_response_device_health_t))
	}
	if argc == 2 {
		return p.GetHealth__SWIG_0(a[0].(Rplidar_response_device_health_t), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GetDeviceInfo__SWIG_0(arg2 Rplidar_response_device_info_t, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_getDeviceInfo__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetDeviceInfo__SWIG_1(arg2 Rplidar_response_device_info_t) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (uint)(C._wrap_RPlidarDriver_getDeviceInfo__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GetDeviceInfo(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.GetDeviceInfo__SWIG_1(a[0].(Rplidar_response_device_info_t))
	}
	if argc == 2 {
		return p.GetDeviceInfo__SWIG_0(a[0].(Rplidar_response_device_info_t), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GetSampleDuration_uS__SWIG_0(arg2 Rplidar_response_sample_rate_t, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_getSampleDuration_uS__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetSampleDuration_uS__SWIG_1(arg2 Rplidar_response_sample_rate_t) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (uint)(C._wrap_RPlidarDriver_getSampleDuration_uS__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GetSampleDuration_uS(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.GetSampleDuration_uS__SWIG_1(a[0].(Rplidar_response_sample_rate_t))
	}
	if argc == 2 {
		return p.GetSampleDuration_uS__SWIG_0(a[0].(Rplidar_response_sample_rate_t), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) SetMotorPWM(arg2 uint16) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_setMotorPWM_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) SetLidarSpinSpeed__SWIG_0(arg2 uint16, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_setLidarSpinSpeed__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) SetLidarSpinSpeed__SWIG_1(arg2 uint16) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_setLidarSpinSpeed__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) SetLidarSpinSpeed(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.SetLidarSpinSpeed__SWIG_1(a[0].(uint16))
	}
	if argc == 2 {
		return p.SetLidarSpinSpeed__SWIG_0(a[0].(uint16), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) StartMotor() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RPlidarDriver_startMotor_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) StopMotor() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RPlidarDriver_stopMotor_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) CheckMotorCtrlSupport__SWIG_0(arg2 *bool, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_checkMotorCtrlSupport__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) CheckMotorCtrlSupport__SWIG_1(arg2 *bool) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_checkMotorCtrlSupport__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) CheckMotorCtrlSupport(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.CheckMotorCtrlSupport__SWIG_1(a[0].(*bool))
	}
	if argc == 2 {
		return p.CheckMotorCtrlSupport__SWIG_0(a[0].(*bool), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) CheckIfTofLidar__SWIG_0(arg2 *bool, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_checkIfTofLidar__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) CheckIfTofLidar__SWIG_1(arg2 *bool) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_checkIfTofLidar__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) CheckIfTofLidar(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.CheckIfTofLidar__SWIG_1(a[0].(*bool))
	}
	if argc == 2 {
		return p.CheckIfTofLidar__SWIG_0(a[0].(*bool), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GetFrequency__SWIG_0(arg2 bool, arg3 int64, arg4 *float32, arg5 *bool) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (uint)(C._wrap_RPlidarDriver_getFrequency__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.swig_type_13(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetFrequency__SWIG_1(arg2 RplidarScanMode, arg3 int64, arg4 *float32) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (uint)(C._wrap_RPlidarDriver_getFrequency__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_14(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GetFrequency(a ...interface{}) uint {
	argc := len(a)
	if argc == 3 {
		return p.GetFrequency__SWIG_1(a[0].(RplidarScanMode), a[1].(int64), a[2].(*float32))
	}
	if argc == 4 {
		return p.GetFrequency__SWIG_0(a[0].(bool), a[1].(int64), a[2].(*float32), a[3].(*bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) StartScanNormal__SWIG_0(arg2 bool, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_startScanNormal__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) StartScanNormal__SWIG_1(arg2 bool) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_startScanNormal__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) StartScanNormal(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.StartScanNormal__SWIG_1(a[0].(bool))
	}
	if argc == 2 {
		return p.StartScanNormal__SWIG_0(a[0].(bool), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) CheckExpressScanSupported__SWIG_0(arg2 *bool, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_checkExpressScanSupported__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) CheckExpressScanSupported__SWIG_1(arg2 *bool) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_checkExpressScanSupported__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) CheckExpressScanSupported(a ...interface{}) uint {
	argc := len(a)
	if argc == 1 {
		return p.CheckExpressScanSupported__SWIG_1(a[0].(*bool))
	}
	if argc == 2 {
		return p.CheckExpressScanSupported__SWIG_0(a[0].(*bool), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) Stop__SWIG_0(arg2 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RPlidarDriver_stop__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) Stop__SWIG_1() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RPlidarDriver_stop__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) Stop(a ...interface{}) uint {
	argc := len(a)
	if argc == 0 {
		return p.Stop__SWIG_1()
	}
	if argc == 1 {
		return p.Stop__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GrabScanData__SWIG_0(arg2 Rplidar_response_measurement_node_t, arg3 *int64, arg4 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (uint)(C._wrap_RPlidarDriver_grabScanData__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GrabScanData__SWIG_1(arg2 Rplidar_response_measurement_node_t, arg3 *int64) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_grabScanData__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GrabScanData(a ...interface{}) uint {
	argc := len(a)
	if argc == 2 {
		return p.GrabScanData__SWIG_1(a[0].(Rplidar_response_measurement_node_t), a[1].(*int64))
	}
	if argc == 3 {
		return p.GrabScanData__SWIG_0(a[0].(Rplidar_response_measurement_node_t), a[1].(*int64), a[2].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GrabScanDataHq__SWIG_0(arg2 Rplidar_response_measurement_node_hq_t, arg3 *int64, arg4 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (uint)(C._wrap_RPlidarDriver_grabScanDataHq__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GrabScanDataHq__SWIG_1(arg2 Rplidar_response_measurement_node_hq_t, arg3 *int64) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_grabScanDataHq__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) GrabScanDataHq(a ...interface{}) uint {
	argc := len(a)
	if argc == 2 {
		return p.GrabScanDataHq__SWIG_1(a[0].(Rplidar_response_measurement_node_hq_t), a[1].(*int64))
	}
	if argc == 3 {
		return p.GrabScanDataHq__SWIG_0(a[0].(Rplidar_response_measurement_node_hq_t), a[1].(*int64), a[2].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) AscendScanData__SWIG_0(arg2 Rplidar_response_measurement_node_t, arg3 int64) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_ascendScanData__SWIG_0_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_15(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) AscendScanData__SWIG_1(arg2 Rplidar_response_measurement_node_hq_t, arg3 int64) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_ascendScanData__SWIG_1_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_16(_swig_i_2)))
	return swig_r
}

func (p SwigcptrRPlidarDriver) AscendScanData(a ...interface{}) uint {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(SwigcptrRplidar_response_measurement_node_t); !ok {
			goto check_1
		}
		return p.AscendScanData__SWIG_0(a[0].(Rplidar_response_measurement_node_t), a[1].(int64))
	}
check_1:
	if argc == 2 {
		return p.AscendScanData__SWIG_1(a[0].(Rplidar_response_measurement_node_hq_t), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRPlidarDriver) GetScanDataWithInterval(arg2 Rplidar_response_measurement_node_t, arg3 *int64) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_getScanDataWithInterval_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRPlidarDriver) GetScanDataWithIntervalHq(arg2 Rplidar_response_measurement_node_hq_t, arg3 *int64) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_RPlidarDriver_getScanDataWithIntervalHq_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func DeleteRPlidarDriver(arg1 RPlidarDriver) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RPlidarDriver_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRPlidarDriver) SetX_chanDev(arg2 ChannelDevice) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RPlidarDriver__chanDev_set_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRPlidarDriver) GetX_chanDev() (_swig_ret ChannelDevice) {
	var swig_r ChannelDevice
	_swig_i_0 := arg1
	swig_r = (ChannelDevice)(SwigcptrChannelDevice(C._wrap_RPlidarDriver__chanDev_get_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type RPlidarDriver interface {
	Swigcptr() uintptr
	SwigIsRPlidarDriver()
	Connect(a ...interface{}) uint
	Disconnect()
	IsConnected() (_swig_ret bool)
	Reset(a ...interface{}) uint
	ClearNetSerialRxCache() (_swig_ret uint)
	GetAllSupportedScanModes(a ...interface{}) uint
	GetTypicalScanMode(a ...interface{}) uint
	StartScan(a ...interface{}) uint
	StartScanExpress(a ...interface{}) uint
	GetHealth(a ...interface{}) uint
	GetDeviceInfo(a ...interface{}) uint
	GetSampleDuration_uS(a ...interface{}) uint
	SetMotorPWM(arg2 uint16) (_swig_ret uint)
	SetLidarSpinSpeed(a ...interface{}) uint
	StartMotor() (_swig_ret uint)
	StopMotor() (_swig_ret uint)
	CheckMotorCtrlSupport(a ...interface{}) uint
	CheckIfTofLidar(a ...interface{}) uint
	GetFrequency(a ...interface{}) uint
	StartScanNormal(a ...interface{}) uint
	CheckExpressScanSupported(a ...interface{}) uint
	Stop(a ...interface{}) uint
	GrabScanData(a ...interface{}) uint
	GrabScanDataHq(a ...interface{}) uint
	AscendScanData(a ...interface{}) uint
	GetScanDataWithInterval(arg2 Rplidar_response_measurement_node_t, arg3 *int64) (_swig_ret uint)
	GetScanDataWithIntervalHq(arg2 Rplidar_response_measurement_node_hq_t, arg3 *int64) (_swig_ret uint)
	SetX_chanDev(arg2 ChannelDevice)
	GetX_chanDev() (_swig_ret ChannelDevice)
}

func New_measurementNodeHqArray(arg1 int) (_swig_ret Rplidar_response_measurement_node_hq_t) {
	var swig_r Rplidar_response_measurement_node_hq_t
	_swig_i_0 := arg1
	swig_r = (Rplidar_response_measurement_node_hq_t)(SwigcptrRplidar_response_measurement_node_hq_t(C._wrap_new_measurementNodeHqArray_gen_37f4c5c4e69870d1(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func Delete_measurementNodeHqArray(arg1 Rplidar_response_measurement_node_hq_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_measurementNodeHqArray_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0))
}

func MeasurementNodeHqArray_getitem(arg1 Rplidar_response_measurement_node_hq_t, arg2 int) (_swig_ret Rplidar_response_measurement_node_hq_t) {
	var swig_r Rplidar_response_measurement_node_hq_t
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (Rplidar_response_measurement_node_hq_t)(SwigcptrRplidar_response_measurement_node_hq_t(C._wrap_measurementNodeHqArray_getitem_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func MeasurementNodeHqArray_setitem(arg1 Rplidar_response_measurement_node_hq_t, arg2 int, arg3 Rplidar_response_measurement_node_hq_t) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_measurementNodeHqArray_setitem_gen_37f4c5c4e69870d1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}


type SwigcptrStd_vector_Sl_rp_standalone_rplidar_RplidarScanMode_Sg_ uintptr
type Std_vector_Sl_rp_standalone_rplidar_RplidarScanMode_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_rp_standalone_rplidar_RplidarScanMode_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

